{"version":3,"sources":["video/loop.mp4","video/loop.gif","Animation/Amin1.js","Animation/Amin2.js","Animation/Amin3.js","Animation/Amin4.js","Animation/load.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","bodymovinOptions","loop","autoplay","prerender","animationData","animation","options","App2","bodymovinOptions2","animation2","handleScroll","playVideo","props","isMobile","isTablet","document","getElementById","className","onChange","isVisible","setState","visable","onChange2","visable2","onChange3","visable3","mail","window","open","state","addEventListener","this","setTimeout","body","style","overflow","onscroll","pageYOffset","removeEventListener","id","onClick","src","img","alt","ref","type","muted","autoPlay","Component","withGetScreen","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a64bb945.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loop.bd37ab2c.mp4\";","module.exports = __webpack_public_path__ + \"static/media/loop.fadf96b0.gif\";","import React from 'react'\nimport ReactBodymovin from 'react-bodymovin'\nimport animation from './anim1.json'\n \nconst App = () => {\n  const bodymovinOptions = {\n    loop: false,\n    autoplay: true,\n    prerender: true,\n    animationData: animation\n  }\n \n  return (\n    <div>\n      <ReactBodymovin options={bodymovinOptions} />\n    </div>\n  )\n}\n \nexport default App\n","import React from 'react'\nimport ReactBodymovin from 'react-bodymovin'\nimport animation2 from './anim2.json'\n \nconst App2 = () => {\n  const bodymovinOptions2 = {\n    loop: false,\n    autoplay: true,\n    prerender: true,\n    animationData: animation2\n  }\n \n  return (\n    <div>\n      <ReactBodymovin options={bodymovinOptions2} />\n    </div>\n  )\n}\n \nexport default App2\n","import React from 'react'\nimport ReactBodymovin from 'react-bodymovin'\nimport animation2 from './anim3.json'\n \nconst App2 = () => {\n  const bodymovinOptions2 = {\n    loop: false,\n    autoplay: true,\n    prerender: true,\n    animationData: animation2\n  }\n \n  return (\n    <div>\n      <ReactBodymovin options={bodymovinOptions2} />\n    </div>\n  )\n}\n \nexport default App2\n","import React from 'react'\nimport ReactBodymovin from 'react-bodymovin'\nimport animation2 from './anim4.json'\n \nconst App2 = () => {\n  const bodymovinOptions2 = {\n    loop: false,\n    autoplay: true,\n    prerender: true,\n    animationData: animation2\n  }\n \n  return (\n    <div>\n      <ReactBodymovin options={bodymovinOptions2} />\n    </div>\n  )\n}\n \nexport default App2\n","import React from 'react'\nimport ReactBodymovin from 'react-bodymovin'\nimport animation2 from './load.json'\n \nconst App2 = () => {\n  const bodymovinOptions2 = {\n    loop: true,\n    autoplay: true,\n    prerender: true,\n    animationData: animation2\n  }\n \n  return (\n    <div>\n      <ReactBodymovin options={bodymovinOptions2} />\n    </div>\n  )\n}\n \nexport default App2\n","import React, { Component } from 'react';\nimport './App.css';\nimport loop from \"./video/loop.mp4\";\nimport img from \"./video/loop.gif\";\nimport Anim1 from \"./Animation/Amin1.js\";\nimport Anim2 from \"./Animation/Amin2.js\";\nimport Anim3 from \"./Animation/Amin3.js\";\nimport Anim4 from \"./Animation/Amin4.js\";\nimport Load from \"./Animation/load.js\";\nimport { withGetScreen } from 'react-getscreen'\nimport VisibilitySensor from \"react-visibility-sensor\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    const me = this\n    this.state = {\n    };\n  }\n\n\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    setTimeout(function () { document.body.style.overflow = \"scroll\"; document.getElementById(\"theBody\").className = \"zeBody\";\n    document.getElementById(\"scDown\").className = \"scrollDown\";\n  }, 1000);\n    window.onscroll = function () {\n      if (window.pageYOffset < 500) {\n        if(document.getElementById(\"video1\")){\n          document.getElementById(\"video1\").className = \"mouseNotHoverTop\"\n        }\n        if(document.getElementById(\"img1\")){\n          document.getElementById(\"img1\").className = \"mouseNotHoverTop2\"\n        }\n        document.getElementById(\"logo\").className = \"logoView\";\n      }\n\n      if (window.pageYOffset < 300) {\n\n        document.getElementById(\"logo\").className = \"logoView\";\n      }\n      else {\n        document.getElementById(\"logo\").className = \"logoHide\";\n        document.getElementById(\"scDown\").className = \"scrollDownHide\";\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    this.playVideo()\n  }\n\n\n  playVideo = () => {\n\n    if (this.props.isMobile() || this.props.isTablet()) {\n      document.getElementById(\"img1\").className = \"mouseHover2\";\n    }\n\n    else {\n     \n      document.getElementById(\"video1\").className = \"mouseHover\";\n    }\n\n\n\n  };\n\n  // pauseVideo = () => {\n\n  //   if (this.props.isMobile() || this.props.isTablet()) {\n  //     // document.getElementById(\"img1\").className = \"mouseNotHover\";\n  //   }\n\n  //   else if (window.pageYOffset > 500) {\n\n  //     // document.getElementById(\"video1\").className = \"mouseNotHover\";\n  //   }\n\n  // };\n\n  onChange = (isVisible) => {\n\n    this.setState({\n      visable: isVisible\n    })\n  }\n\n  onChange2 = (isVisible) => {\n\n    this.setState({\n      visable2: isVisible\n    })\n  }\n\n  onChange3 = (isVisible) => {\n\n    this.setState({\n      visable3: isVisible\n    })\n  }\n\n  mail = () => {\n\n    window.open('mailto:contact@urbanoid.com')\n  }\n\n\n\n\n\n\n\n\n  render() {\n\n    ////// Moblie version\n\n    if (this.props.isMobile() || this.props.isTablet()) {\n      return (\n        <div id=\"theBody\">\n        {this.state.visable &&   <div className=\"fixeDiv\">\n             <div className=\"anim2\" onClick={this.mail} >\n \n               <  Anim2 />\n             </div>\n \n           </div>}\n \n           {this.state.visable2 &&   <div className=\"fixeDiv\">\n             <div className=\"anim2\" onClick={this.mail} >\n \n               <  Anim3 />\n             </div>\n \n           </div>}\n \n           {this.state.visable3 &&   <div className=\"fixeDiv\">\n             <div className=\"anim2\" onClick={this.mail} >\n \n               <  Anim4 />\n             </div>\n \n           </div>}\n \n \n \n           <div id=\"logo\" className=\"logoView\" >\n             <div className=\"anim1\"><  Anim1 />\n             </div>\n \n           </div>\n           <div className=\"allo2\">\n \n           </div>\n           <div className=\"allo2\">\n             <VisibilitySensor onChange={this.onChange}>\n               <div className=\"emptydiv2\">\n \n               </div>\n \n             </VisibilitySensor>\n           </div>\n \n \n           <div className=\"allo2\">\n             <VisibilitySensor onChange={this.onChange2}>\n               <div className=\"emptydiv2\">\n        \n               </div>\n \n             </VisibilitySensor>\n           </div>\n \n           <div className=\"allo2\">\n             <VisibilitySensor onChange={this.onChange3}>\n               <div className=\"emptydiv2\">\n        \n               </div>\n \n             </VisibilitySensor>\n           </div>\n           \n \n \n           <div className=\"colorBackground\">\n        \n\n             <img   id=\"img1\"      src={img} className=\"mouseNotHoverTop\" alt=\"\"/>\n           </div>\n \n         </div>\n      )\n\n      }\n\nelse\n{\n\n\n\n\n\n      return (\n        <div id=\"theBody\">\n\n\n\n          <div className=\"scrollDownHide\" id=\"scDown\"> \n       <div className=\"loadload\">\n           <Load/>\n\n            </div>\n          </div>\n       {this.state.visable &&   <div className=\"fixeDiv\">\n            <div className=\"anim2\" onClick={this.mail} >\n\n              <  Anim2 />\n            </div>\n\n          </div>}\n\n          {this.state.visable2 &&   <div className=\"fixeDiv\">\n            <div className=\"anim2\" onClick={this.mail} >\n\n              <  Anim3 />\n            </div>\n\n          </div>}\n\n          {this.state.visable3 &&   <div className=\"fixeDiv\">\n            <div className=\"anim2\" onClick={this.mail} >\n\n              <  Anim4 />\n            </div>\n\n          </div>}\n\n\n\n          <div id=\"logo\" className=\"logoView\" >\n            <div className=\"anim1\"><  Anim1 />\n            </div>\n\n          </div>\n          <div className=\"allo2\">\n\n          </div>\n          <div className=\"allo2\">\n            <VisibilitySensor onChange={this.onChange}>\n              <div className=\"emptydiv2\">\n\n              </div>\n\n            </VisibilitySensor>\n          </div>\n\n\n          <div className=\"allo2\">\n            <VisibilitySensor onChange={this.onChange2}>\n              <div className=\"emptydiv2\">\n       \n              </div>\n\n            </VisibilitySensor>\n          </div>\n\n          <div className=\"allo2\">\n            <VisibilitySensor onChange={this.onChange3}>\n              <div className=\"emptydiv2\">\n       \n              </div>\n\n            </VisibilitySensor>\n          </div>\n          \n\n\n          <div className=\"colorBackground\">\n            <video\n              id=\"video1\"\n              className=\"mouseNotHoverTop\"\n              ref=\"vidRef\"\n              src={loop}\n              type=\"video/mp4\"\n              loop\n              muted\n              autoPlay\n            />\n          </div>\n\n        </div>\n      )\n\n    \n\n\n\n  }\n}}\n\nexport default withGetScreen(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}